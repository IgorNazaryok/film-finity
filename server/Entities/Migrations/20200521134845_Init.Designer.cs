// <auto-generated />
using Entities.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(FilmFinityDbContext))]
    [Migration("20200521134845_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.CelebrityJobTitles", b =>
                {
                    b.Property<int>("CelebrityId")
                        .HasColumnType("int");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.HasKey("CelebrityId", "JobTitleId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("CelebrityJobTitles");

                    b.HasData(
                        new
                        {
                            CelebrityId = -1,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -1,
                            JobTitleId = 3
                        },
                        new
                        {
                            CelebrityId = -1,
                            JobTitleId = 6
                        },
                        new
                        {
                            CelebrityId = -2,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -3,
                            JobTitleId = 1
                        },
                        new
                        {
                            CelebrityId = -3,
                            JobTitleId = 6
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Celebrity", b =>
                {
                    b.Property<int>("CelebrityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CelebrityPicURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountViews")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CelebrityId");

                    b.ToTable("Celebrities");

                    b.HasData(
                        new
                        {
                            CelebrityId = -1,
                            CelebrityPicURL = "",
                            CountViews = 121000,
                            FirstName = "Уилл",
                            LastName = "Смит"
                        },
                        new
                        {
                            CelebrityId = -2,
                            CelebrityPicURL = "",
                            CountViews = 134000,
                            FirstName = "Хью",
                            LastName = "Джекман"
                        },
                        new
                        {
                            CelebrityId = -3,
                            CelebrityPicURL = "",
                            CountViews = 127000,
                            FirstName = "Райан",
                            LastName = "Рейнольдс"
                        },
                        new
                        {
                            CelebrityId = -4,
                            CelebrityPicURL = "",
                            CountViews = 126000,
                            FirstName = "Роберт",
                            LastName = "Дауни (младший)"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            Job = "Actor"
                        },
                        new
                        {
                            JobTitleId = 2,
                            Job = "Writer"
                        },
                        new
                        {
                            JobTitleId = 3,
                            Job = "Director"
                        },
                        new
                        {
                            JobTitleId = 4,
                            Job = "Composer"
                        },
                        new
                        {
                            JobTitleId = 5,
                            Job = "Cinematographer"
                        },
                        new
                        {
                            JobTitleId = 6,
                            Job = "Producer"
                        });
                });

            modelBuilder.Entity("Entities.Models.CelebrityJobTitles", b =>
                {
                    b.HasOne("WebAPI.Models.Celebrity", "Celebrity")
                        .WithMany("CelebrityJobTitles")
                        .HasForeignKey("CelebrityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.JobTitle", "JobTitle")
                        .WithMany("CelebrityJobTitles")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
